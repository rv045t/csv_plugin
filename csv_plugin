{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4c4a0729",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in c:\\users\\hp home\\anaconda3\\lib\\site-packages (1.4.2)\n",
      "Requirement already satisfied: numpy>=1.18.5 in c:\\users\\hp home\\anaconda3\\lib\\site-packages (from pandas) (1.22.4)\n",
      "Requirement already satisfied: python-dateutil>=2.8.1 in c:\\users\\hp home\\anaconda3\\lib\\site-packages (from pandas) (2.8.2)\n",
      "Requirement already satisfied: pytz>=2020.1 in c:\\users\\hp home\\anaconda3\\lib\\site-packages (from pandas) (2021.3)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\hp home\\anaconda3\\lib\\site-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b8c62abb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b6172980",
   "metadata": {},
   "outputs": [],
   "source": [
    "def read_csv(file_path):\n",
    "    data = pd.read_csv(file_path)\n",
    "    return data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "bb56b18e",
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: 'path/to/your/csv/file.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[1;32mIn [5]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m'\u001b[39m:\n\u001b[0;32m      2\u001b[0m     csv_file_path \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mpath/to/your/csv/file.csv\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m----> 3\u001b[0m     data \u001b[38;5;241m=\u001b[39m \u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcsv_file_path\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      4\u001b[0m     \u001b[38;5;28mprint\u001b[39m(data)\n",
      "Input \u001b[1;32mIn [3]\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(file_path)\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mread_csv\u001b[39m(file_path):\n\u001b[1;32m----> 2\u001b[0m     data \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfile_path\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      3\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m data\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\util\\_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[0;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[0;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[0;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[0;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[0;32m    310\u001b[0m     )\n\u001b[1;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:680\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\u001b[0m\n\u001b[0;32m    665\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m    666\u001b[0m     dialect,\n\u001b[0;32m    667\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    676\u001b[0m     defaults\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdelimiter\u001b[39m\u001b[38;5;124m\"\u001b[39m: \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m,\u001b[39m\u001b[38;5;124m\"\u001b[39m},\n\u001b[0;32m    677\u001b[0m )\n\u001b[0;32m    678\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m--> 680\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:575\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    572\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    574\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 575\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    577\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    578\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:933\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m    930\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m    932\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m--> 933\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1217\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1213\u001b[0m     mode \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mrb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1214\u001b[0m \u001b[38;5;66;03m# error: No overload variant of \"get_handle\" matches argument types\u001b[39;00m\n\u001b[0;32m   1215\u001b[0m \u001b[38;5;66;03m# \"Union[str, PathLike[str], ReadCsvBuffer[bytes], ReadCsvBuffer[str]]\"\u001b[39;00m\n\u001b[0;32m   1216\u001b[0m \u001b[38;5;66;03m# , \"str\", \"bool\", \"Any\", \"Any\", \"Any\", \"Any\", \"Any\"\u001b[39;00m\n\u001b[1;32m-> 1217\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\u001b[43m  \u001b[49m\u001b[38;5;66;43;03m# type: ignore[call-overload]\u001b[39;49;00m\n\u001b[0;32m   1218\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1219\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1220\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1221\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1222\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1223\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1224\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1225\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1226\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1227\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1228\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\io\\common.py:789\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    784\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    785\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    786\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    787\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    788\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 789\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[0;32m    790\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    791\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    792\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    793\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    794\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m    795\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    796\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    797\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    798\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'path/to/your/csv/file.csv'"
     ]
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    csv_file_path = 'path/to/your/csv/file.csv'\n",
    "    data = read_csv(csv_file_path)\n",
    "    print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6a5036f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP Home\\AppData\\Local\\Temp\\ipykernel_7972\\1879342370.py:3: DtypeWarning: Columns (2,3,4,6,9,12,17,18,19) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  data = pd.read_csv(csv_file_path, dtype={'column_name': str})\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          fdc_id                               brand_owner  \\\n",
      "0        1105904  Richardson Oilseed Products (US) Limited   \n",
      "1        1105905                     CAMPBELL SOUP COMPANY   \n",
      "2        1105906                     CAMPBELL SOUP COMPANY   \n",
      "3        1105907                     CAMPBELL SOUP COMPANY   \n",
      "4        1105908                     CAMPBELL SOUP COMPANY   \n",
      "...          ...                                       ...   \n",
      "1807149  2512366                           Cavendish Farms   \n",
      "1807150  2512367                            JTM Food Group   \n",
      "1807151  2512368                Peterson Farms Fresh, Inc.   \n",
      "1807152  2512369                 National Food Group  Inc.   \n",
      "1807153  2512370                Incobrasa Industries, Ltd.   \n",
      "\n",
      "                    brand_name          subbrand_name        gtin_upc  \\\n",
      "0                          NaN                    NaN  00027000612323   \n",
      "1                          NaN                    NaN  00051000198808   \n",
      "2                          NaN                    NaN  00051000213273   \n",
      "3                          NaN                    NaN  00051000213303   \n",
      "4                          NaN                    NaN  00051000224637   \n",
      "...                        ...                    ...             ...   \n",
      "1807149        CAVENDISH FARMS                    NaN  10056210345001   \n",
      "1807150         JTM Food Group                    NaN  20049485054010   \n",
      "1807151  Peterson Farms Treats  Peterson Farms Treats  10882266100673   \n",
      "1807152               Zee Zees                    NaN  00185043000412   \n",
      "1807153              Long Life                    NaN  00859872000683   \n",
      "\n",
      "                                               ingredients  \\\n",
      "0                                            Vegetable Oil   \n",
      "1        INGREDIENTS: BEEF STOCK, CONTAINS LESS THAN 2%...   \n",
      "2        INGREDIENTS: CLAM STOCK, POTATOES, CLAMS, CREA...   \n",
      "3        INGREDIENTS: WATER, CREAM, BROCCOLI, CELERY, V...   \n",
      "4        INGREDIENTS: CHICKEN STOCK, CONTAINS LESS THAN...   \n",
      "...                                                    ...   \n",
      "1807149  Potatoes, Vegetable Oil (Contains one or more ...   \n",
      "1807150  GROUND PORK (no more than 20% fat), WATER, TOM...   \n",
      "1807151  Apples, Water, Natural Flavor, Fruit and Veget...   \n",
      "1807152  Apples, Water, Cinnamon, Natural Flavor, Ascor...   \n",
      "1807153                                        soybean oil   \n",
      "\n",
      "        not_a_significant_source_of  serving_size serving_size_unit  \\\n",
      "0                               NaN     15.000000                ml   \n",
      "1                               NaN    240.000000                ml   \n",
      "2                               NaN    440.000000                 g   \n",
      "3                               NaN    440.000000                 g   \n",
      "4                               NaN    240.000000                ml   \n",
      "...                             ...           ...               ...   \n",
      "1807149                         NaN     85.000000               GRM   \n",
      "1807150                         NaN     97.519997               GRM   \n",
      "1807151                         NaN    128.000000               GRM   \n",
      "1807152                         NaN    128.000000               GRM   \n",
      "1807153                         NaN     14.000000               GRM   \n",
      "\n",
      "        household_serving_fulltext  \\\n",
      "0                              NaN   \n",
      "1                              NaN   \n",
      "2                              NaN   \n",
      "3                              NaN   \n",
      "4                              NaN   \n",
      "...                            ...   \n",
      "1807149                Per serving   \n",
      "1807150                    3.44oz.   \n",
      "1807151                      1 cup   \n",
      "1807152                 4.5 oz cup   \n",
      "1807153               1 tablespoon   \n",
      "\n",
      "                                  branded_food_category data_source  \\\n",
      "0                                           Oils Edible        GDSN   \n",
      "1                                 Herbs/Spices/Extracts        GDSN   \n",
      "2                                        Prepared Soups        GDSN   \n",
      "3                                        Prepared Soups        GDSN   \n",
      "4                                 Herbs/Spices/Extracts        GDSN   \n",
      "...                                                 ...         ...   \n",
      "1807149                  Vegetables  Prepared/Processed        GDSN   \n",
      "1807150  Meat/Poultry/Other Animals  Prepared/Processed        GDSN   \n",
      "1807151                       Fruit  Prepared/Processed        GDSN   \n",
      "1807152                       Fruit  Prepared/Processed        GDSN   \n",
      "1807153                                     Oils Edible        GDSN   \n",
      "\n",
      "        package_weight modified_date available_date market_country  \\\n",
      "0                  NaN    2020-10-02     2020-11-13  United States   \n",
      "1                  NaN    2020-09-12     2020-11-13  United States   \n",
      "2                  NaN    2020-09-01     2020-11-13  United States   \n",
      "3                  NaN    2020-09-01     2020-11-13  United States   \n",
      "4                  NaN    2020-10-03     2020-11-13  United States   \n",
      "...                ...           ...            ...            ...   \n",
      "1807149         30 LBR    2022-08-04     2023-03-23  United States   \n",
      "1807150         30 LBR    2022-07-29     2023-03-23  United States   \n",
      "1807151          96 EA    2022-12-21     2023-03-23  United States   \n",
      "1807152          96 EA    2022-03-23     2023-03-23  United States   \n",
      "1807153        128 OZA    2022-06-29     2023-03-23  United States   \n",
      "\n",
      "         discontinued_date preparation_state_code  \\\n",
      "0                      NaN                    NaN   \n",
      "1                      NaN                    NaN   \n",
      "2                      NaN                    NaN   \n",
      "3                      NaN                    NaN   \n",
      "4                      NaN                    NaN   \n",
      "...                    ...                    ...   \n",
      "1807149                NaN                 FREEZE   \n",
      "1807150                NaN               PREPARED   \n",
      "1807151                NaN           READY_TO_EAT   \n",
      "1807152                NaN           READY_TO_EAT   \n",
      "1807153                NaN               PREPARED   \n",
      "\n",
      "                                             trade_channel  \\\n",
      "0                                                      NaN   \n",
      "1                                                      NaN   \n",
      "2                                                      NaN   \n",
      "3                                                      NaN   \n",
      "4                                                      NaN   \n",
      "...                                                    ...   \n",
      "1807149                  [\"CHILD_NUTRITION_FOOD_PROGRAMS\"]   \n",
      "1807150  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807151  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807152  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807153                                                NaN   \n",
      "\n",
      "                         short_description  \n",
      "0                                      NaN  \n",
      "1                                      NaN  \n",
      "2                                      NaN  \n",
      "3                                      NaN  \n",
      "4                                      NaN  \n",
      "...                                    ...  \n",
      "1807149     CAVENDISH FARMS POTATO PATTIES  \n",
      "1807150      C/E Pork Undrained Sloppy Joe  \n",
      "1807151  Unsw Strawberry Banana Applesauce  \n",
      "1807152    Unsweetened Cinnamon Applesauce  \n",
      "1807153  Long Life Vegetable Oil 128 ounce  \n",
      "\n",
      "[1807154 rows x 20 columns]\n"
     ]
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    csv_file_path = r'C:\\Users\\HP Home\\Downloads\\FoodData_Central_csv_2023-04-20\\all downloads apr 2023\\branded_food.csv'\n",
    "    data = pd.read_csv(csv_file_path, dtype={'column_name': str})\n",
    "    data = pd.read_csv(csv_file_path, low_memory=False)\n",
    "    print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9038a62b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          fdc_id                               brand_owner  \\\n",
      "0        1105904  Richardson Oilseed Products (US) Limited   \n",
      "1        1105905                     CAMPBELL SOUP COMPANY   \n",
      "2        1105906                     CAMPBELL SOUP COMPANY   \n",
      "3        1105907                     CAMPBELL SOUP COMPANY   \n",
      "4        1105908                     CAMPBELL SOUP COMPANY   \n",
      "...          ...                                       ...   \n",
      "1807149  2512366                           Cavendish Farms   \n",
      "1807150  2512367                            JTM Food Group   \n",
      "1807151  2512368                Peterson Farms Fresh, Inc.   \n",
      "1807152  2512369                 National Food Group  Inc.   \n",
      "1807153  2512370                Incobrasa Industries, Ltd.   \n",
      "\n",
      "                    brand_name          subbrand_name        gtin_upc  \\\n",
      "0                          NaN                    NaN  00027000612323   \n",
      "1                          NaN                    NaN  00051000198808   \n",
      "2                          NaN                    NaN  00051000213273   \n",
      "3                          NaN                    NaN  00051000213303   \n",
      "4                          NaN                    NaN  00051000224637   \n",
      "...                        ...                    ...             ...   \n",
      "1807149        CAVENDISH FARMS                    NaN  10056210345001   \n",
      "1807150         JTM Food Group                    NaN  20049485054010   \n",
      "1807151  Peterson Farms Treats  Peterson Farms Treats  10882266100673   \n",
      "1807152               Zee Zees                    NaN  00185043000412   \n",
      "1807153              Long Life                    NaN  00859872000683   \n",
      "\n",
      "                                               ingredients  \\\n",
      "0                                            Vegetable Oil   \n",
      "1        INGREDIENTS: BEEF STOCK, CONTAINS LESS THAN 2%...   \n",
      "2        INGREDIENTS: CLAM STOCK, POTATOES, CLAMS, CREA...   \n",
      "3        INGREDIENTS: WATER, CREAM, BROCCOLI, CELERY, V...   \n",
      "4        INGREDIENTS: CHICKEN STOCK, CONTAINS LESS THAN...   \n",
      "...                                                    ...   \n",
      "1807149  Potatoes, Vegetable Oil (Contains one or more ...   \n",
      "1807150  GROUND PORK (no more than 20% fat), WATER, TOM...   \n",
      "1807151  Apples, Water, Natural Flavor, Fruit and Veget...   \n",
      "1807152  Apples, Water, Cinnamon, Natural Flavor, Ascor...   \n",
      "1807153                                        soybean oil   \n",
      "\n",
      "        not_a_significant_source_of  serving_size serving_size_unit  \\\n",
      "0                               NaN     15.000000                ml   \n",
      "1                               NaN    240.000000                ml   \n",
      "2                               NaN    440.000000                 g   \n",
      "3                               NaN    440.000000                 g   \n",
      "4                               NaN    240.000000                ml   \n",
      "...                             ...           ...               ...   \n",
      "1807149                         NaN     85.000000               GRM   \n",
      "1807150                         NaN     97.519997               GRM   \n",
      "1807151                         NaN    128.000000               GRM   \n",
      "1807152                         NaN    128.000000               GRM   \n",
      "1807153                         NaN     14.000000               GRM   \n",
      "\n",
      "        household_serving_fulltext  \\\n",
      "0                              NaN   \n",
      "1                              NaN   \n",
      "2                              NaN   \n",
      "3                              NaN   \n",
      "4                              NaN   \n",
      "...                            ...   \n",
      "1807149                Per serving   \n",
      "1807150                    3.44oz.   \n",
      "1807151                      1 cup   \n",
      "1807152                 4.5 oz cup   \n",
      "1807153               1 tablespoon   \n",
      "\n",
      "                                  branded_food_category data_source  \\\n",
      "0                                           Oils Edible        GDSN   \n",
      "1                                 Herbs/Spices/Extracts        GDSN   \n",
      "2                                        Prepared Soups        GDSN   \n",
      "3                                        Prepared Soups        GDSN   \n",
      "4                                 Herbs/Spices/Extracts        GDSN   \n",
      "...                                                 ...         ...   \n",
      "1807149                  Vegetables  Prepared/Processed        GDSN   \n",
      "1807150  Meat/Poultry/Other Animals  Prepared/Processed        GDSN   \n",
      "1807151                       Fruit  Prepared/Processed        GDSN   \n",
      "1807152                       Fruit  Prepared/Processed        GDSN   \n",
      "1807153                                     Oils Edible        GDSN   \n",
      "\n",
      "        package_weight modified_date available_date market_country  \\\n",
      "0                  NaN    2020-10-02     2020-11-13  United States   \n",
      "1                  NaN    2020-09-12     2020-11-13  United States   \n",
      "2                  NaN    2020-09-01     2020-11-13  United States   \n",
      "3                  NaN    2020-09-01     2020-11-13  United States   \n",
      "4                  NaN    2020-10-03     2020-11-13  United States   \n",
      "...                ...           ...            ...            ...   \n",
      "1807149         30 LBR    2022-08-04     2023-03-23  United States   \n",
      "1807150         30 LBR    2022-07-29     2023-03-23  United States   \n",
      "1807151          96 EA    2022-12-21     2023-03-23  United States   \n",
      "1807152          96 EA    2022-03-23     2023-03-23  United States   \n",
      "1807153        128 OZA    2022-06-29     2023-03-23  United States   \n",
      "\n",
      "         discontinued_date preparation_state_code  \\\n",
      "0                      NaN                    NaN   \n",
      "1                      NaN                    NaN   \n",
      "2                      NaN                    NaN   \n",
      "3                      NaN                    NaN   \n",
      "4                      NaN                    NaN   \n",
      "...                    ...                    ...   \n",
      "1807149                NaN                 FREEZE   \n",
      "1807150                NaN               PREPARED   \n",
      "1807151                NaN           READY_TO_EAT   \n",
      "1807152                NaN           READY_TO_EAT   \n",
      "1807153                NaN               PREPARED   \n",
      "\n",
      "                                             trade_channel  \\\n",
      "0                                                      NaN   \n",
      "1                                                      NaN   \n",
      "2                                                      NaN   \n",
      "3                                                      NaN   \n",
      "4                                                      NaN   \n",
      "...                                                    ...   \n",
      "1807149                  [\"CHILD_NUTRITION_FOOD_PROGRAMS\"]   \n",
      "1807150  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807151  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807152  [\"CHILD_NUTRITION_FOOD_PROGRAMS\",\"CHILD_NUTRIT...   \n",
      "1807153                                                NaN   \n",
      "\n",
      "                         short_description  \n",
      "0                                      NaN  \n",
      "1                                      NaN  \n",
      "2                                      NaN  \n",
      "3                                      NaN  \n",
      "4                                      NaN  \n",
      "...                                    ...  \n",
      "1807149     CAVENDISH FARMS POTATO PATTIES  \n",
      "1807150      C/E Pork Undrained Sloppy Joe  \n",
      "1807151  Unsw Strawberry Banana Applesauce  \n",
      "1807152    Unsweetened Cinnamon Applesauce  \n",
      "1807153  Long Life Vegetable Oil 128 ounce  \n",
      "\n",
      "[1807154 rows x 20 columns]\n"
     ]
    }
   ],
   "source": [
    "if __name__ == '__main__':\n",
    "    csv_file_path = r'C:\\Users\\HP Home\\Downloads\\FoodData_Central_csv_2023-04-20\\all downloads apr 2023\\branded_food.csv'\n",
    "    dtype_mapping = {\n",
    "    'column_name_1': str,\n",
    "    'column_name_2': int,\n",
    "    'column_name_3': float,\n",
    "    # Add more columns and their respective data types\n",
    "    }\n",
    "\n",
    "data = pd.read_csv(csv_file_path, dtype=dtype_mapping, low_memory=False)\n",
    "print(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "eeda1a79",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP Home\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "print(os.getcwd())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "848c6e81",
   "metadata": {},
   "outputs": [],
   "source": [
    "import shutil\n",
    "\n",
    "source = 'csv_plugin.py'\n",
    "destination = r'C:\\Users\\HP Home'\n",
    "\n",
    "shutil.copy(source, destination)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
